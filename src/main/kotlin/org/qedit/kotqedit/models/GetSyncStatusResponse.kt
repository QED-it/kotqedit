/**
* QEDIT - Asset Transfers
* This SDK provides a programmatic way for interacting with QEDIT's _Asset Transfer_ API. The specification definition file is publicly available [in this repository](https://github.com/QED-it/asset_transfers_dev_guide/). 
*
* OpenAPI spec version: 1.8.0
* Contact: dev@qed-it.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.qedit.kotqedit.models


/**
 * 
 * @param inSync Boolean signifying whether the QEDIT Node is in sync with the Blockchain; false if the Node is not synced; sync is defined as having less than a preconfigured difference between the current Blockchain height and the last block processed by the Node; the allowed difference defaults to 5, but can be configured when setting up the Node
 * @param blockchainBlockHeight The current block height of the Blockchain
 * @param lastProcessedBlockHeight The height of the last block that was processed in the Node
 */
data class GetSyncStatusResponse (
    /* Boolean signifying whether the QEDIT Node is in sync with the Blockchain; false if the Node is not synced; sync is defined as having less than a preconfigured difference between the current Blockchain height and the last block processed by the Node; the allowed difference defaults to 5, but can be configured when setting up the Node */
    val inSync: kotlin.Boolean? = null,
    /* The current block height of the Blockchain */
    val blockchainBlockHeight: kotlin.Int? = null,
    /* The height of the last block that was processed in the Node */
    val lastProcessedBlockHeight: kotlin.Int? = null
) {

}

