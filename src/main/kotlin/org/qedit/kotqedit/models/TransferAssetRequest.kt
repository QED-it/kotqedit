/**
* QEDIT - Asset Transfers
* This SDK provides a programmatic way for interacting with QEDIT's _Asset Transfer_ API. The specification definition file is publicly available [in this repository](https://github.com/QED-it/asset_transfers_dev_guide/). 
*
* OpenAPI spec version: 1.8.0
* Contact: dev@qed-it.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.qedit.kotqedit.models


/**
 * 
 * @param walletId The ID of the Wallet to transfer from
 * @param authorization The authorization password for the Wallet to transfer from
 * @param recipientAddress The Address of the recipient of the funds
 * @param assetId The ID of an Asset Type. It must be a string of length 0 to 40 characters. Allowed characters are lower- and uppercase letters, digits, dot (.), and hyphen (-). It must not end with an hyphen. Asset IDs are case-sensitive. 
 * @param amount The amount of assets to transfer
 * @param memo An app-customizable field to store additional private data relating to the transfer; the memo is shared between the sender and the receiver, but is not divulged to other parties
 * @param attachmentIds The globally-unique identifiers of the Attachments to attach to the transferred Asset; the attachments must already be uploaded, and their identifiers are returned by the upload endpoint
 * @param requireConfirmationFrom A user may request confirmation from the receiving party. If a public key of the approver is included in this optional field, the transaction will only become valid after the received signs it. The receiver will be able to decide whether to accept or reject the transfer by calling the /node/approve_task or the /node/reject_task respectively.
 */
data class TransferAssetRequest (
    /* The ID of the Wallet to transfer from */
    val walletId: kotlin.String,
    /* The authorization password for the Wallet to transfer from */
    val authorization: kotlin.String,
    /* The Address of the recipient of the funds */
    val recipientAddress: kotlin.String,
    /* The ID of an Asset Type. It must be a string of length 0 to 40 characters. Allowed characters are lower- and uppercase letters, digits, dot (.), and hyphen (-). It must not end with an hyphen. Asset IDs are case-sensitive.  */
    val assetId: kotlin.String,
    /* The amount of assets to transfer */
    val amount: kotlin.Int,
    /* An app-customizable field to store additional private data relating to the transfer; the memo is shared between the sender and the receiver, but is not divulged to other parties */
    val memo: kotlin.String,
    /* The globally-unique identifiers of the Attachments to attach to the transferred Asset; the attachments must already be uploaded, and their identifiers are returned by the upload endpoint */
    val attachmentIds: kotlin.Array<kotlin.String>? = null,
    /* A user may request confirmation from the receiving party. If a public key of the approver is included in this optional field, the transaction will only become valid after the received signs it. The receiver will be able to decide whether to accept or reject the transfer by calling the /node/approve_task or the /node/reject_task respectively. */
    val requireConfirmationFrom: kotlin.String? = null
) {

}

