/**
* QEDIT - Asset Transfers
* This SDK provides a programmatic way for interacting with QEDIT's _Asset Transfer_ API. The specification definition file is publicly available [in this repository](https://github.com/QED-it/asset_transfers_dev_guide/). 
*
* OpenAPI spec version: 1.8.0
* Contact: dev@qed-it.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.qedit.kotqedit.models


/**
 * 
 * @param groupId The unique identifier of the Group
 * @param joinedAt Timestamp of when the Group credentials were shared with the Wallet. The timestamp is in RFC-3339 format.
 * @param readPermission Boolean set to true if and only if read permission for the given Group was shared with the given Wallet. Note that write access is always shared.
 * @param memo The memo used by the application that first shared this Group with the given Wallet when calling `add_to_group`.
 */
data class GroupInformation (
    /* The unique identifier of the Group */
    val groupId: kotlin.String,
    /* Timestamp of when the Group credentials were shared with the Wallet. The timestamp is in RFC-3339 format. */
    val joinedAt: java.time.LocalDateTime,
    /* Boolean set to true if and only if read permission for the given Group was shared with the given Wallet. Note that write access is always shared. */
    val readPermission: kotlin.Boolean,
    /* The memo used by the application that first shared this Group with the given Wallet when calling `add_to_group`. */
    val memo: kotlin.String
) {

}

