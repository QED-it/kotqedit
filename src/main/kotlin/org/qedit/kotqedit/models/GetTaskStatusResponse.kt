/**
* QEDIT - Asset Transfers
* This SDK provides a programmatic way for interacting with QEDIT's _Asset Transfer_ API. The specification definition file is publicly available [in this repository](https://github.com/QED-it/asset_transfers_dev_guide/). 
*
* OpenAPI spec version: 1.8.0
* Contact: dev@qed-it.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.qedit.kotqedit.models

import org.qedit.kotqedit.models.Result
import org.qedit.kotqedit.models.TaskData
import org.qedit.kotqedit.models.TaskState
import org.qedit.kotqedit.models.TaskType

/**
 * 
 * @param id Unique ID of the Task
 * @param createdAt UTC time of creation of the Task in RFC-3339 format
 * @param updatedAt UTC last time the Task was updated in RFC-3339 format
 * @param result 
 * @param state 
 * @param txHash The Blockchain-generated hash of the Transaction; populated after the Blockchain Node accepted the Transaction
 * @param qeditTxHash The QEDIT-generated hash of the Transaction; generated after proof generation, but prior to Broadcast by the QEDIT Node
 * @param type 
 * @param &#x60;data&#x60; 
 * @param error In case of failure this field reports the reason for the failure
 */
data class GetTaskStatusResponse (
    /* Unique ID of the Task */
    val id: kotlin.String? = null,
    /* UTC time of creation of the Task in RFC-3339 format */
    val createdAt: java.time.LocalDateTime? = null,
    /* UTC last time the Task was updated in RFC-3339 format */
    val updatedAt: java.time.LocalDateTime? = null,
    val result: Result? = null,
    val state: TaskState? = null,
    /* The Blockchain-generated hash of the Transaction; populated after the Blockchain Node accepted the Transaction */
    val txHash: kotlin.String? = null,
    /* The QEDIT-generated hash of the Transaction; generated after proof generation, but prior to Broadcast by the QEDIT Node */
    val qeditTxHash: kotlin.String? = null,
    val type: TaskType? = null,
    val `data`: TaskData? = null,
    /* In case of failure this field reports the reason for the failure */
    val error: kotlin.String? = null
) {

}

