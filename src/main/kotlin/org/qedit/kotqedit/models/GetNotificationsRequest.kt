/**
* QEDIT - Asset Transfers
* This SDK provides a programmatic way for interacting with QEDIT's _Asset Transfer_ API. The specification definition file is publicly available [in this repository](https://github.com/QED-it/asset_transfers_dev_guide/). 
*
* OpenAPI spec version: 1.8.0
* Contact: dev@qed-it.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.qedit.kotqedit.models

import org.qedit.kotqedit.models.NotificationType
import org.qedit.kotqedit.models.OrderEnum

/**
 * The request body determines which filters to apply to the notifications. All filters are optional, while the maximal number of results defaults to 100 and the order defaults to descending.
 * @param walletId Fetch notifications that relate to this wallet ID only
 * @param types 
 * @param startingWithTime Fetch notifications reported at this timestamp or later/earlier. Later notifications will be fetched if the order is ascending, and earlier ones if the order is descending. The timestamp is expected to be in RFC-3339 format.
 * @param afterId Fetch notifications after this given ID (not including the notification with the given ID). This is meant to facilitate pagination. Later notifications will be fetched if ascending order is selected, and earlier ones if descending order is selected. Warning - do not assume anything about the implementation of after_id; the values of the ID are intended to be copy-pasted from retrieved notifications for pagination.
 * @param order 
 * @param maxResults The maximal number of results to fetch
 */
data class GetNotificationsRequest (
    /* Fetch notifications that relate to this wallet ID only */
    val walletId: kotlin.String? = null,
    val types: kotlin.Array<NotificationType>? = null,
    /* Fetch notifications reported at this timestamp or later/earlier. Later notifications will be fetched if the order is ascending, and earlier ones if the order is descending. The timestamp is expected to be in RFC-3339 format. */
    val startingWithTime: java.time.LocalDateTime? = null,
    /* Fetch notifications after this given ID (not including the notification with the given ID). This is meant to facilitate pagination. Later notifications will be fetched if ascending order is selected, and earlier ones if descending order is selected. Warning - do not assume anything about the implementation of after_id; the values of the ID are intended to be copy-pasted from retrieved notifications for pagination. */
    val afterId: kotlin.Int? = null,
    val order: OrderEnum? = null,
    /* The maximal number of results to fetch */
    val maxResults: kotlin.Int? = null
) {

}

