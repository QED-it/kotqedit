/**
* QEDIT - Asset Transfers
* This SDK provides a programmatic way for interacting with QEDIT's _Asset Transfer_ API. The specification definition file is publicly available [in this repository](https://github.com/QED-it/asset_transfers_dev_guide/). 
*
* OpenAPI spec version: 1.8.0
* Contact: dev@qed-it.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.qedit.kotqedit.models

import org.qedit.kotqedit.models.AnalyticsRuleDefinition

/**
 * The data of a particular Rule changing transaction
 * @param senderPublicKey The public key of the Wallet used to create the Rule
 * @param rulesToAdd The details of the Rules added in this transaction
 * @param rulesToDelete The details of the Rules deleted in this transaction
 * @param nonce The nonce used to make this Rule transaction unique
 * @param signature The signature authorizing the Rule changes, made by the Wallet that made the Rule changes
 */
data class AnalyticsRuleTx (
    /* The public key of the Wallet used to create the Rule */
    val senderPublicKey: kotlin.String? = null,
    /* The details of the Rules added in this transaction */
    val rulesToAdd: kotlin.Array<AnalyticsRuleDefinition>? = null,
    /* The details of the Rules deleted in this transaction */
    val rulesToDelete: kotlin.Array<AnalyticsRuleDefinition>? = null,
    /* The nonce used to make this Rule transaction unique */
    val nonce: kotlin.Int? = null,
    /* The signature authorizing the Rule changes, made by the Wallet that made the Rule changes */
    val signature: kotlin.String? = null
) {

}

