/**
* QEDIT - Asset Transfers
* This SDK provides a programmatic way for interacting with QEDIT's _Asset Transfer_ API. The specification definition file is publicly available [in this repository](https://github.com/QED-it/asset_transfers_dev_guide/). 
*
* OpenAPI spec version: 1.8.0
* Contact: dev@qed-it.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.AnalyticsOutputDescription
import org.openapitools.client.models.AnalyticsSpendDescription

/**
 * The data of a single Transfer within a Transfer transaction
 * @param spends The information and Proofs associated with the Assets spent in the Transfer
 * @param outputs The information and Proofs associated with the Assets output from the Transfer
 * @param rk The re-randomized public key of the Wallet which created the Transfer
 * @param spendAuthSig The signature authorizing the spend of the Assets spent in the Transfer
 * @param bindingSig The signature binding the spent and output Assets and verifying the balance
 * @param confirmationSig The signature of the confirming party if a confirmation was requested; empty if no confirmation was requested
 */
data class AnalyticsTransferTx (
    /* The information and Proofs associated with the Assets spent in the Transfer */
    val spends: kotlin.Array<AnalyticsSpendDescription>? = null,
    /* The information and Proofs associated with the Assets output from the Transfer */
    val outputs: kotlin.Array<AnalyticsOutputDescription>? = null,
    /* The re-randomized public key of the Wallet which created the Transfer */
    val rk: kotlin.String? = null,
    /* The signature authorizing the spend of the Assets spent in the Transfer */
    val spendAuthSig: kotlin.String? = null,
    /* The signature binding the spent and output Assets and verifying the balance */
    val bindingSig: kotlin.String? = null,
    /* The signature of the confirming party if a confirmation was requested; empty if no confirmation was requested */
    val confirmationSig: kotlin.String? = null
) {

}

