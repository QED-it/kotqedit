/**
* QEDIT - Asset Transfers
* This SDK provides a programmatic way for interacting with QEDIT's _Asset Transfer_ API. The specification definition file is publicly available [in this repository](https://github.com/QED-it/asset_transfers_dev_guide/). 
*
* OpenAPI spec version: 1.8.0
* Contact: dev@qed-it.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models


/**
 * The metadata of a single Attachment, without the potentially long content
 * @param attachmentId The globally-unique ID of the Attachment; can be used as a reference for downloading it
 * @param name A name used by the uploader to describe the Attachment; does not have to be unique; should not be relied upon to uniquely identify the Attachment
 * @param contentType The media type (a.k.a. MIME type) of the content as specifies by the uploader of the Attachment
 * @param txHash The transaction hash for the transaction the Attachment was attached in. Set to empty string if the Wallet is unaware of the particular transaction in which the Attachment was attached to the Asset.
 * @param assetId The asset ID transferred in the transaction to which this Attachment was attached.
 * @param uploadedAt The time the Attachment was uploaded at, in RFC-3339 format
 * @param contentLengthBytes The length in bytes of the raw content of the Attachment
 */
data class AttachmentHeader (
    /* The globally-unique ID of the Attachment; can be used as a reference for downloading it */
    val attachmentId: kotlin.String,
    /* A name used by the uploader to describe the Attachment; does not have to be unique; should not be relied upon to uniquely identify the Attachment */
    val name: kotlin.String,
    /* The media type (a.k.a. MIME type) of the content as specifies by the uploader of the Attachment */
    val contentType: kotlin.String,
    /* The transaction hash for the transaction the Attachment was attached in. Set to empty string if the Wallet is unaware of the particular transaction in which the Attachment was attached to the Asset. */
    val txHash: kotlin.String? = null,
    /* The asset ID transferred in the transaction to which this Attachment was attached. */
    val assetId: kotlin.String? = null,
    /* The time the Attachment was uploaded at, in RFC-3339 format */
    val uploadedAt: java.time.LocalDateTime? = null,
    /* The length in bytes of the raw content of the Attachment */
    val contentLengthBytes: kotlin.Long? = null
) {

}

